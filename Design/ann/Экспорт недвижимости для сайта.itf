Экспорт недвижимости для сайтаЭкспорт недвижимости для сайта&{0921F68E-E564-4172-A84A-5D6237FC32D5}+unit Main;
{ модуль разработан ФИО }

interface

procedure fmStatbtRunClick(Sender: TObject);
procedure fmStatbtCloseClick(Sender: TObject);
procedure fmStatClose(Sender: TObject; var Action: TCloseAction);
procedure fmStatbtReleaseClick(Sender: TObject);

implementation

var
  NumRelease: Integer;

procedure SetRelease;
begin
  fmExport.rbi.Visual.TypeView:=tviOnlyData;
  fmExport.rbi.Condition.WhereStr.Clear;
  fmExport.rbi.Condition.WhereStr.Add(' release_id='+fmExport.edRelease.Tag+' ');
  if fmExport.rbi.View then begin
    if not fmExport.memd.IsEmpty then begin
      NumRelease:=fmExport.memd.FieldByName('numrelease').AsInteger;
      fmExport.edRelease.Text:=Trim(fmExport.memd.FieldByName('about').AsString+
                                 ' ('+fmExport.memd.FieldByName('numrelease').AsString+')');
    end;
  end;
end;

procedure ViewInterface;
begin
  if fmExport.FormStyle<>fsMDIChild then begin
    fmExport.edRelease.Tag:=ReadParam(GetInterfaceName,fmExport.edRelease.Name,fmExport.edRelease.Tag);
    SetRelease;
    fmExport.FormStyle:=fsMDIChild;
  end else begin
    fmExport.WindowState:=wsNormal;
    fmExport.BringToFront;
    fmExport.Show;
  end;
end;

procedure Export(FileName: String);
var
  pb: THandle;
  qr: TiIBQuery;
  str: TStringList;
  i: Integer;
begin
  fmExport.siSplash.View;
  Screen.Cursor:=crHourGlass;
  str:=TStringList.Create;
  try
    Application.ProcessMessages;

    fmExport.qrExport.Active:=false;
    fmExport.tran.Active:=false;
  
    fmExport.qrExport.Params.ParamByName('RELEASE_ID').Value:=fmExport.edRelease.Tag;
  
    fmExport.tran.Active:=true;
    fmExport.qrExport.Active:=true;

    qr:=fmExport.qrExport;

    qr.FetchAll;

    i:=0;
    pb:=CreateProgressBar(0,qr.RecordCount,'',clBlack);
    try
      qr.First;
      while not qr.Eof do begin
        Application.ProcessMessages;
        inc(i);
        SetProgressBarStatus(pb,i,qr.RecordCount,'');
        str.Add(qr.FieldByName('AP_PREMISES_ID').AsString+','+
                qr.FieldByName('RELEASE_ID').AsString+','+
                qr.FieldByName('AP_AGENCY_ID').AsString+','+
                qr.FieldByName('AP_OPERATION_ID').AsString+','+
                QuotedStr(qr.FieldByName('REGION_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('LANDMARK_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_INTERNET_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_PREMISES_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('STYLE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('BUILDER_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_DOOR_NAME').AsString)+','+

                QuotedStr(qr.FieldByName('HOME_TECH_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_FURNITURE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_GARAGE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_BATH_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_SEWERAGE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_CONDITION_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_PLATE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_WATER_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_HEAT_NAME').AsString)+','+
                QuotedStr(FormatDateTime('yyyy-mm-dd',qr.FieldByName('DELIVERY_DATE').Value))+','+
                QuotedStr(qr.FieldByName('NN').AsString)+','+
                QuotedStr(qr.FieldByName('TOWN_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('STREET_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('HOUSE').AsString)+','+
                QuotedStr(qr.FieldByName('APARTMENT').AsString)+','+
                QuotedStr(qr.FieldByName('FLOOR').AsString)+','+
                QuotedStr(qr.FieldByName('FLOOR_COUNT').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_BUILDING_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('COUNTROOM_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('GENERAL_AREA').AsString)+','+
                QuotedStr(qr.FieldByName('DWELLING_AREA').AsString)+','+
                QuotedStr(qr.FieldByName('KITCHEN_AREA').AsString)+','+
                QuotedStr(qr.FieldByName('GROUND_AREA').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_PHONE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_BALCONY_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('PLANNING_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_APARTMENT_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('TYPE_SANITARY_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('PRICE').AsString)+','+
                QuotedStr(qr.FieldByName('UNIT_PRICE_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('PREMISES_PHONES').AsString)+','+
                QuotedStr(qr.FieldByName('PREMISES_NAME').AsString)+','+
                QuotedStr(qr.FieldByName('NOTE').AsString)+','+
                QuotedStr(qr.FieldByName('PERIOD').AsString)+','+
                QuotedStr(qr.FieldByName('PAYMENT_FOR').AsString)+','+
                QuotedStr(qr.FieldByName('DELIVERY').AsString));
        qr.Next;
      end;
    finally
      FreeProgressBar(pb);
    end;

    str.SaveToFile(FileName);
  finally
    Str.Free;
    Screen.Cursor:=crDefault;
    fmExport.siSplash.Close;
    ShowInfoEx('Экспортировано: '+IntToStr(qr.RecordCount)+' записей.');
  end;
end;

procedure fmStatbtRunClick(Sender: TObject);
begin
  if Trim(fmExport.edRelease.Text)='' then begin
    ShowInfoEx('Выберите выпуск');
    fmExport.btRelease.SetFocus;
    exit;
  end;
  if fmExport.sd.Execute then
    Export(fmExport.sd.FileName);
end;

procedure fmStatbtCloseClick(Sender: TObject);
begin
  fmExport.Close;
end;

procedure fmStatClose(Sender: TObject; var Action: TCloseAction);
begin
  WriteParam(GetInterfaceName,fmExport.edRelease.Name,fmExport.edRelease.Tag);
  Action:=caFree;
end;

procedure fmStatbtReleaseClick(Sender: TObject);
begin
  fmExport.rbi.Visual.TypeView:=tvibvModal;
  fmExport.rbi.Condition.WhereStr.Clear;
  fmExport.rbi.Locate.KeyFields:='RELEASE_ID';
  fmExport.rbi.Locate.KeyValues:=fmExport.edRelease.Tag;
  if fmExport.rbi.View then begin
    if not fmExport.memd.IsEmpty then begin
      fmExport.edRelease.Tag:=fmExport.memd.FieldByName('RELEASE_ID').AsInteger;
      NumRelease:=fmExport.memd.FieldByName('NUMRELEASE').AsInteger;
      fmExport.edRelease.Text:=Trim(fmExport.memd.FieldByName('ABOUT').AsString+
                                 ' ('+fmExport.memd.FieldByName('NUMRELEASE').AsString+')');
    end;
  end;
end;

end.
G"object fmExport: TfmExport
  Left = 27
  Top = 25
  ActiveControl = btRun
  BorderIcons = [biSystemMenu, biMinimize]
  BorderStyle = bsSingle
  Caption = 'Экспорт недвижимости для сайта'
  ClientHeight = 79
  ClientWidth = 229
  Color = clBtnFace
  Constraints.MaxHeight = 106
  Constraints.MaxWidth = 237
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -1
  Font.Name = 'MS Sans Serif'
  Font.Style = []
  Icon.Data = {
    0000010001001010100000000000280100001600000028000000100000002000
    00000100040000000000C0000000000000000000000000000000000000000000
    000000008000008000000080800080000000800080008080000080808000C0C0
    C0000000FF0000FF000000FFFF00FF000000FF00FF00FFFF0000FFFFFF000000
    0000000000000000000000000000078888888888880007FFFFFFFFFFF80007FF
    00FF00FFF80007FF00F00FFFF80007FF0000FFFFF80007FF000FFFFFF80007FF
    0000FFFFF80007FF00FF0FFFF80007FF00FF0FFFF80007FF00FF0FF0000007FF
    0000FFF7880007FFFFFFFFF7800007FFFFFFFFF700000777777777770000FFFF
    0000800100008001000080010000800100008001000080010000800100008001
    0000800100008001000080010000800100008003000080070000800F0000}
  OldCreateOrder = False
  Position = poScreenCenter
  OnClose = fmStatClose
  EnabledAdjust = False
  PixelsPerInch = 96
  TextHeight = 13
  object lbRelease: TiLabel
    Left = 22
    Top = 16
    Width = 41
    Height = 13
    Alignment = taRightJustify
    Caption = 'Выпуск:'
  end
  object edRelease: TiEdit
    Left = 73
    Top = 13
    Width = 121
    Height = 21
    Color = clBtnFace
    ReadOnly = True
    TabOrder = 0
  end
  object btRelease: TiButton
    Left = 200
    Top = 13
    Width = 21
    Height = 21
    Hint = 'Выбрать выпуск'
    Caption = '...'
    ParentShowHint = False
    ShowHint = True
    TabOrder = 1
    OnClick = fmStatbtReleaseClick
  end
  object btRun: TiButton
    Left = 31
    Top = 48
    Width = 107
    Height = 25
    Hint = 'Экспортировать данные'
    Anchors = [akRight, akBottom]
    Caption = 'Экспортировать'
    Default = True
    TabOrder = 2
    OnClick = fmStatbtRunClick
  end
  object btClose: TiButton
    Left = 147
    Top = 48
    Width = 75
    Height = 25
    Hint = 'Закрыть'
    Anchors = [akRight, akBottom]
    Caption = 'Закрыть'
    TabOrder = 3
    OnClick = fmStatbtCloseClick
  end
  object rbi: TiRBookInterface
    Visual.TypeView = tvibvModal
    Visual.MultiSelect = False
    ReturnData = memd
    Locate.Options = []
    ExecProcedure.Params = <>
    InterfaceName = 'Справочник выпусков'
    Left = 145
    Top = 40
  end
  object memd: TitsvMemoryData
    FieldDefs = <>
    Left = 177
    Top = 40
  end
  object tran: TiIBTransaction
    Active = False
    DefaultDatabase = MainDataBase.Owner
    Params.Strings = (
      'read_committed'
      'rec_version'
      'nowait')
    AutoStopAction = saNone
    Left = 8
    Top = 40
  end
  object qrExport: TiIBQuery
    Database = MainDataBase.Owner
    Transaction = tran
    BufferChunks = 1000
    CachedUpdates = False
    SQL.Strings = (
      'SELECT'
      
        'P.AP_PREMISES_ID,P.AP_OPERATION_ID,P.DELIVERY_DATE,P.NN,P.PHONES' +
        ' AS PREMISES_PHONES,'
      
        'P.NAME AS PREMISES_NAME,P.AP_TOWN_ID,P.AP_REGION_ID,P.AP_LANDMAR' +
        'K_ID,P.AP_STREET_ID,'
      
        'P.AP_COUNTROOM_ID,P.HOUSE,P.APARTMENT,P.FLOOR,P.FLOOR_COUNT,P.AP' +
        '_TYPE_BUILDING_ID,'
      
        'P.GENERAL_AREA,P.DWELLING_AREA,P.KITCHEN_AREA,P.GROUND_AREA,P.NO' +
        'TE,P.AP_AGENCY_ID,'
      
        'P.PRICE,P.AP_UNIT_PRICE_ID,P.PERIOD,P.PAYMENT_FOR,P.DELIVERY,P.A' +
        'P_TYPE_INTERNET_ID,'
      
        'P.AP_TYPE_PREMISES_ID,P.AP_BUILDER_ID,P.AP_TYPE_DOOR_ID,P.AP_HOM' +
        'E_TECH_ID,'
      
        'P.AP_TYPE_FURNITURE_ID,P.AP_TYPE_GARAGE_ID,P.AP_TYPE_BATH_ID,P.A' +
        'P_TYPE_SEWERAGE_ID,'
      
        'P.AP_TYPE_CONDITION_ID,P.AP_TYPE_PLATE_ID,P.AP_TYPE_WATER_ID,P.A' +
        'P_TYPE_HEAT_ID,'
      
        'P.AP_TYPE_PHONE_ID,P.AP_TYPE_BALCONY_ID,P.AP_PLANNING_ID,P.AP_TY' +
        'PE_APARTMENT_ID,'
      
        'P.AP_TYPE_SANITARY_ID,P.AP_STYLE_ID,P.WHO_INSERT_ID,P.WHEN_INSER' +
        'T,P.WHO_UPDATE_ID,'
      
        'P.WHEN_UPDATE,P.RELEASE_ID,T.NAME AS TOWN_NAME,S.NAME AS STREET_' +
        'NAME,'
      
        'R.NAME AS REGION_NAME,LM.NAME AS LANDMARK_NAME,CR.NAME AS COUNTR' +
        'OOM_NAME,'
      
        'TB.NAME AS TYPE_BUILDING_NAME,A.NAME AS AGENCY_NAME,UP.NAME AS U' +
        'NIT_PRICE_NAME,'
      
        'TI.NAME AS TYPE_INTERNET_NAME,TP.NAME AS TYPE_PREMISES_NAME,B.NA' +
        'ME AS BUILDER_NAME,'
      
        'TD.NAME AS TYPE_DOOR_NAME,HT.NAME AS HOME_TECH_NAME,TF.NAME AS T' +
        'YPE_FURNITURE_NAME,'
      
        'TG.NAME AS TYPE_GARAGE_NAME,TA.NAME AS TYPE_BATH_NAME,TS.NAME AS' +
        ' TYPE_SEWERAGE_NAME,'
      
        'TC.NAME AS TYPE_CONDITION_NAME,TL.NAME AS TYPE_PLATE_NAME,TW.NAM' +
        'E AS TYPE_WATER_NAME,'
      
        'TH.NAME AS TYPE_HEAT_NAME,TN.NAME AS TYPE_PHONE_NAME,TY.NAME AS ' +
        'TYPE_BALCONY_NAME,'
      
        'PL.NAME AS PLANNING_NAME,TT.NAME AS TYPE_APARTMENT_NAME,TR.NAME ' +
        'AS TYPE_SANITARY_NAME,'
      
        'ST.NAME AS STYLE_NAME,UI.NAME AS WHO_INSERT_NAME,UU.NAME AS WHO_' +
        'UPDATE_NAME,'
      'RL.ABOUT AS RELEASE_ABOUT'
      'FROM AP_PREMISES P'
      'JOIN USERS UI ON P.WHO_INSERT_ID=UI.USER_ID'
      'JOIN USERS UU ON P.WHO_UPDATE_ID=UU.USER_ID'
      'JOIN RELEASE RL ON P.RELEASE_ID=RL.RELEASE_ID'
      'LEFT JOIN AP_TOWN T ON P.AP_TOWN_ID=T.AP_TOWN_ID'
      'LEFT JOIN AP_STREET S ON P.AP_STREET_ID=S.AP_STREET_ID'
      'LEFT JOIN AP_AGENCY A ON P.AP_AGENCY_ID=A.AP_AGENCY_ID'
      'LEFT JOIN AP_REGION R ON P.AP_REGION_ID=R.AP_REGION_ID'
      'LEFT JOIN AP_LANDMARK LM ON P.AP_LANDMARK_ID=LM.AP_LANDMARK_ID'
      
        'LEFT JOIN AP_COUNTROOM CR ON P.AP_COUNTROOM_ID=CR.AP_COUNTROOM_I' +
        'D'
      
        'LEFT JOIN AP_TYPE_BUILDING TB ON P.AP_TYPE_BUILDING_ID=TB.AP_TYP' +
        'E_BUILDING_ID'
      
        'LEFT JOIN AP_UNIT_PRICE UP ON P.AP_UNIT_PRICE_ID=UP.AP_UNIT_PRIC' +
        'E_ID'
      
        'LEFT JOIN AP_TYPE_INTERNET TI ON P.AP_TYPE_INTERNET_ID=TI.AP_TYP' +
        'E_INTERNET_ID'
      
        'LEFT JOIN AP_TYPE_PREMISES TP ON P.AP_TYPE_PREMISES_ID=TP.AP_TYP' +
        'E_PREMISES_ID'
      'LEFT JOIN AP_BUILDER B ON P.AP_BUILDER_ID=B.AP_BUILDER_ID'
      
        'LEFT JOIN AP_TYPE_DOOR TD ON P.AP_TYPE_DOOR_ID=TD.AP_TYPE_DOOR_I' +
        'D'
      
        'LEFT JOIN AP_HOME_TECH HT ON P.AP_HOME_TECH_ID=HT.AP_HOME_TECH_I' +
        'D'
      
        'LEFT JOIN AP_TYPE_FURNITURE TF ON P.AP_TYPE_FURNITURE_ID=TF.AP_T' +
        'YPE_FURNITURE_ID'
      
        'LEFT JOIN AP_TYPE_GARAGE TG ON P.AP_TYPE_GARAGE_ID=TG.AP_TYPE_GA' +
        'RAGE_ID'
      
        'LEFT JOIN AP_TYPE_BATH TA ON P.AP_TYPE_BATH_ID=TA.AP_TYPE_BATH_I' +
        'D'
      
        'LEFT JOIN AP_TYPE_SEWERAGE TS ON P.AP_TYPE_SEWERAGE_ID=TS.AP_TYP' +
        'E_SEWERAGE_ID'
      
        'LEFT JOIN AP_TYPE_CONDITION TC ON P.AP_TYPE_CONDITION_ID=TC.AP_T' +
        'YPE_CONDITION_ID'
      
        'LEFT JOIN AP_TYPE_PLATE TL ON P.AP_TYPE_PLATE_ID=TL.AP_TYPE_PLAT' +
        'E_ID'
      
        'LEFT JOIN AP_TYPE_WATER TW ON P.AP_TYPE_WATER_ID=TW.AP_TYPE_WATE' +
        'R_ID'
      
        'LEFT JOIN AP_TYPE_HEAT TH ON P.AP_TYPE_HEAT_ID=TH.AP_TYPE_HEAT_I' +
        'D'
      
        'LEFT JOIN AP_TYPE_PHONE TN ON P.AP_TYPE_PHONE_ID=TN.AP_TYPE_PHON' +
        'E_ID'
      
        'LEFT JOIN AP_TYPE_BALCONY TY ON P.AP_TYPE_BALCONY_ID=TY.AP_TYPE_' +
        'BALCONY_ID'
      'LEFT JOIN AP_PLANNING PL ON P.AP_PLANNING_ID=PL.AP_PLANNING_ID'
      
        'LEFT JOIN AP_TYPE_APARTMENT TT ON P.AP_TYPE_APARTMENT_ID=TT.AP_T' +
        'YPE_APARTMENT_ID'
      
        'LEFT JOIN AP_TYPE_SANITARY TR ON P.AP_TYPE_SANITARY_ID=TR.AP_TYP' +
        'E_SANITARY_ID'
      
        'LEFT JOIN AP_STYLE ST ON P.AP_STYLE_ID=ST.AP_STYLE_ID  WHERE (P.' +
        'RELEASE_ID=:RELEASE_ID)')
    Left = 8
    Top = 8
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'RELEASE_ID'
        ParamType = ptUnknown
      end>
  end
  object siSplash: TiServiceInterface
    ExecProcedure.Params = <>
    InterfaceName = 'Заставка'
    Left = 40
    Top = 8
  end
  object sd: TiSaveDialog
    DefaultExt = '*.txt'
    FileName = 'premises.txt'
    Filter = 'Текстовые файлы (*.txt)|*.txt|Все файлы (*.*)|*.*'
    Options = [ofEnableSizing]
    Left = 104
  end
end
fmExport 